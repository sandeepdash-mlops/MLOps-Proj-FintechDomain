1. Create project template by executing template.py file
2. Write the code on setup.py and pyproject.toml file to import local packages
   >> Find more about "setup.py and pyproject.toml" at crashcourse.txt
3. Create a virtual env, activate it and install the requirements from requirements.txt
   # Create & Activate the virtual environment
   # To get the path of python.exe file,
   python -c "import sys; print(sys.executable)"
   C:\Users\sandeep.d\AppData\Local\Programs\Python\Python313\python.exe
   C:\Users\sandeep.d\AppData\Local\Programs\Python\Python313\python.exe -m venv insurance
   .\insurance\Scripts\Activate
   # Deleting a venv
   deactivate                 # first, exit the venv if active
   #  To delete the virtual environment folder add required modules to requirements.txt delete the folder for  MLOps-Proj1
   Do "pip install -r requirements.txt"
   # If pip not present, then 

   # Run this inside your activated venv:
   python -m ensurepip --upgrade
   # This will reinstall pip inside your virtual environment and create the missing pip.exe file

   # Then also upgrade pip:
   python -m pip install --upgrade pip

   # Now check if pip.exe exists:
   dir .\insurance\Scripts\      # You should see pip.exe and pip3.exe in that folder

   # if stll "pip list" not works, then 
   # If that still doesn’t create pip.exe, we’ll force reinstall pip:
   python -m pip install --upgrade --force-reinstall pip

   # Verify,
   dir .\insurance\Scripts\
   pip --version
4. Do a "pip list" on terminal to make sure you have local packages installed.


----------------------------------------------- MongoDB Setup -----------------------------------------------
5. Sign up to MongoDB Atlas and create a new project by just providing it a name then next next create.
6. From "Create a cluster" screen, hit "create", Select M0 service keeping other services as default, hit "create deployment"
7. Setup the username and password and then create DB user.
8. Go to "network access" and add ip address - "0.0.0.0/0" so that we can access it from anywhere
9. Go back to project >> "Get Connection String" >> "Drivers" >> {Driver:Python, Version:3.6 or later} 
   >> copy and save the connection string with you(replace password). >> Done.
10. Create folder "notebook" >> do step 11 >>  create file "mongoDB_demo.ipynb" >> select kernal >> as we are using base python 3.13.6 env (insurance) select the same python kernal>insurance>>
11. Dataset added to notebook folder
12. Push your data to mongoDB database from your python notebook.
13. Go to mongoDB Atlas >> Database >> browse collection >> see your data in key value format


-------------------------------------- logging, exception and notebooks --------------------------------------
14. Write the logger file and test it on demo.py
15. Write the exception file and test it on demo.py
16. EDA and Feature Engg notebook added.


----------------------------------------------- Data Ingestion -----------------------------------------------
17. Before we work on "Data Ingestion" component >> Declare variables within constants.__init__.py file >> 
    add code to configuration.mongo_db_connections.py file and define the func for mondodb connection >> 
    Inside "data_access" folder, add code to proj1_data that will use mongo_db_connections.py
    to connect with DB, fetch data in key-val format and transform that to df >>
    add code to entity.config_entity.py file till DataIngestionConfig class >>
    add code to entity.artifact_entity.py file till DataIngestionArtifact class >>
    add code to components.data_ingestion.py file >> add code to training pipeline >> 
    run demo.py (set mongodb connection url first, see next step)
18. To setup the connection url on mac(also work for windows), open bash/powershell terminal and run below command:
                        *** For Bash ***
    set: export MONGODB_URL="mongodb+srv://<username>:<password>......"
    check: echo $MONGODB_URL
                        *** For Powershell ***
    set: $env:MONGODB_URL = "mongodb+srv://<username>:<password>......"
    check: echo $env:MONGODB_URL

    To setup the connection url on Windows, open env variable setting option and add a new variable:
    Name: MONGODB_URL, Value = <url>
    Also add "artifact" dir to .gitignore file
